[{"path":"https://jluchman.github.io/domir/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://jluchman.github.io/domir/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"conceptual-introduction","dir":"Articles","previous_headings":"","what":"Conceptual Introduction","title":"Conceptual Introduction to Dominance Analysis","text":"relative importance method implemented domir package produces results relatively easy interpret way computationally intensive implemented. discussion outlines conceptual origins method, relative importance method , details DA method implemented domir package.","code":""},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"dominance-analysis","dir":"Articles","previous_headings":"Conceptual Introduction","what":"Dominance Analysis","title":"Conceptual Introduction to Dominance Analysis","text":"focus domir package dominance analysis (DA). DA method resolves indeterminacy trying ascribe results predictive model’s fit metric, referred ‘value’ package, individual predictive factors (.e., independent variables/IVs, predictors, features), referred ‘names’ package. challenge many predictive models fit metrics way analytically decompose fit statistic/metric given correlations predictive factors naturally present data introduced model. way analytically separate fit statistic ascribe predictive factors, methodological approach applied values ascribed including factors model sequentially. predictive factor included, change fit metric ascribed predictive factor. One issue sequential approach sequence chosen ascribe fit statistic predictive factors determines much fit statistic ascribed factor. analyst good reason choose specific inclusion order, approach produces useful result. Using single inclusion order can problematic good reason choose one specific inclusion order another. inclusion order effectively arbitrary, changing order changes values ascribed predictive factors ways implications inferences model. solution problem consider possible ways including predictive factor. method resolving issue approach used Shapley value decomposition Cooperative Game Theory (see Grömping (2007) discussion) seeks find solution problem subdivide payoffs players cooperative game based relative contribution possible separate relative contributions analytically. DA uses idea comparing across inclusion orders methodological, almost experimental design-like, approach determining importance. DA also extends classic Shapley value decomposition methodology adding two, difficult achieve, importance criteria. three different importance criteria, known dominance designations, discussed greater detail context example discussed brief introduction domir function.","code":""},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"da-implementation-with-domir","dir":"Articles","previous_headings":"Conceptual Introduction","what":"DA Implementation with domir","title":"Conceptual Introduction to Dominance Analysis","text":"domir function API applying DA predictive modeling functions R. sections use function illustrate DA implemented discuss conceptual details computation.","code":""},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"concepts-in-application","dir":"Articles","previous_headings":"","what":"Concepts in Application","title":"Conceptual Introduction to Dominance Analysis","text":"purpose domir package apply DA predictive models. section builds last providing example predictive model illustrate computation interpretation dominance results produced DA. DA developed originally using linear regression (lm) explained variance \\(R^2\\) metric fit statistic (Budescu 1993). examples use model fit statistic widely used understood statistics data science. Consider model using mtcars data datasets package. results show three IVs statistically significant traditional level (.e., \\(p < .05\\)) , total, predictors—, cyl, carb—explain ~80% variance mpg. intend conduct DA model using domir implement DA follows: domir function prints results four sections: fit statistic results general dominance statistics conditional dominance statistics complete dominance proportions “replay” discuss result turn.","code":"library(datasets)  lm_cars <-    lm(mpg ~ am + cyl + carb, data = mtcars)  summary(lm_cars) #>  #> Call: #> lm(formula = mpg ~ am + cyl + carb, data = mtcars) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -5.8853 -1.1581  0.2646  1.4885  5.4843  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  32.1731     2.4914  12.914 2.59e-13 *** #> am            4.2430     1.3094   3.240 0.003074 **  #> cyl          -1.7175     0.4298  -3.996 0.000424 *** #> carb         -1.1304     0.4058  -2.785 0.009481 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 2.755 on 28 degrees of freedom #> Multiple R-squared:  0.8113, Adjusted R-squared:  0.7911  #> F-statistic: 40.13 on 3 and 28 DF,  p-value: 2.855e-10 library(domir)  domir(   mpg ~ am + cyl + carb,    function(formula) {     lm_model <- lm(formula, data = mtcars)     summary(lm_model)[[\"r.squared\"]]   } ) #> Overall Value:      0.8113023  #>  #> General Dominance Values: #>      General Dominance Standardized Ranks #> am           0.2156848    0.2658501     2 #> cyl          0.4173094    0.5143698     1 #> carb         0.1783081    0.2197801     3 #>  #> Conditional Dominance Values: #>      Include At: 1 Include At: 2 Include At: 3 #> am       0.3597989     0.2164938    0.07076149 #> cyl      0.7261800     0.4181185    0.10762967 #> carb     0.3035184     0.1791172    0.05228872 #>  #> Complete Dominance Proportions: #>        > am > cyl > carb #> am >     NA     0      1 #> cyl >     1    NA      1 #> carb >    0     0     NA"},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"fit-statistic-results","dir":"Articles","previous_headings":"Concepts in Application","what":"Fit Statistic Results","title":"Conceptual Introduction to Dominance Analysis","text":"first result domin prints related overall fit statistic value model. game theory terms, value total payoff players/IVs produced cooperative game/model. value produced serves fit statistic “decomposed” DA limiting value much IV able explain. DA ascribe three IVs model separate components ~\\(.8113\\) value related contributions predicting mpg. fit statistic value adjustments reported section well particular associated subsets constant model adjustments (discussed ; sections development) used DA.","code":"Overall Value:      0.8113023"},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"general-dominance-statistics","dir":"Articles","previous_headings":"Concepts in Application","what":"General Dominance Statistics","title":"Conceptual Introduction to Dominance Analysis","text":"second result printed reports general dominance statistics related overall fit statistic’s value divided among IVs. also represent Shapley value decompositions fit statistic showing player/IV ascribed component payoff/fit statistic game/model. General Dominance column statistics can interpreted terms fit metric decomposed. example, value ~\\(0.2157\\) means associated \\(R^2\\) twenty-two percentage points mpg’s variance given predictive model IVs. Standardized column statistics expresses general dominance statistic value percentage overall fit statistic value thus sums 100%. ’s contributions \\(R^2\\)’s total value ~27% (.e., \\(\\frac{.2157}{.8113} = .2659\\)). final Ranks column relevant focal purpose determining relative importance IVs model provides rank ordering IVs based general dominance statistics. DA moves beyond Shapley value decomposition DA, rank ordering based general dominance statistics, allows applying labels relationships IVs terms importance. ranked second smaller general dominance statistic first ranked cyl. , “generally dominated ” cyl. contrast, ranked higher third ranked carb thus “generally dominates” carb. labels known general dominance designations.","code":"General Dominance Values:      General Dominance Standardized Ranks am           0.2156848    0.2658501     2 cyl          0.4173094    0.5143698     1 carb         0.1783081    0.2197801     3"},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"points-of-note-general-dominance","dir":"Articles","previous_headings":"Concepts in Application > General Dominance Statistics","what":"Points of Note: General Dominance","title":"Conceptual Introduction to Dominance Analysis","text":"general dominance statistics always sum value overall fit statistic , represent parts whole, widely considered easiest dominance statistics interpret (.e., compared conditional complete dominance discussed next). general dominance statistics, however simple interpret, least stringent dominance statistics/designations (reasons discussed later). Thus, requirements assign “generally dominates” label relationship two IVs easiest fulfill.","code":""},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"conditional-dominance-statistics","dir":"Articles","previous_headings":"Concepts in Application","what":"Conditional Dominance Statistics","title":"Conceptual Introduction to Dominance Analysis","text":"third section reported domin prints conditional dominance statistics associated IV. IV separate conditional dominance statistic related position included sequence IVs model. conditional dominance matrix can used designate importance way stringent/harder achieve general dominance statistics. determine importance conditional dominance matrix IV compared ‘row-wise’ fashion. value entry row/IV greater value another row/IV position (.e., comparing IVs inclusion position) IV said “conditionally dominate” IV. matrix shows “conditionally dominated ” cyl conditional dominance statistics smaller cyl’s positions 1, 2, 3. Conversely, “conditionally dominates” carb conditional dominance statistics greater carb’s positions 1, 2, 3.","code":"Conditional Dominance Values:      Include At: 1 Include At: 2 Include At: 3 am       0.3597989     0.2164938    0.07076149 cyl      0.7261800     0.4181185    0.10762967 carb     0.3035184     0.1791172    0.05228872"},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"points-of-note-conditional-dominance","dir":"Articles","previous_headings":"Concepts in Application > Conditional Dominance Statistics","what":"Points of Note: Conditional Dominance","title":"Conceptual Introduction to Dominance Analysis","text":"Conditional dominance statistics provide information IV general dominance statistics clearly reveal effect IV redundancy prediction IV. Conditional dominance statistics show average increase predictive usefulness associated IV included specific position sequence IVs. position gets later model, contribution one IV can make tends grow limited. limiting effect IVs reflected trajectory conditional dominance statistics. increase complexity conditional dominance general dominance also results stringent set comparisons. label “conditionally dominates” ascribed relationship shows contribution fit metric positions conditional dominance matrix, difficult criterion achieve therefore stronger designation. Note conditional dominance implies general dominance–reverse true. IV can generally, conditionally, dominate another IV.","code":""},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"complete-dominance-proportions","dir":"Articles","previous_headings":"Concepts in Application","what":"Complete Dominance Proportions","title":"Conceptual Introduction to Dominance Analysis","text":"fourth section reported domir prints complete dominance proportions associated IV pair. IV compared IV two entries matrix. IV noted row labels ‘dominating’ IV implied greater symbol (.e., \\(>\\)) preferring . IV noted column labels ‘dominated’ IV implied greater symbol preferring . values reported proportion sub-models IV row obtains larger value IV column. complete dominance designations useful beyond general conditional dominance results stringent sets comparisons. Complete dominance reflects relative performance IV another IV sub-models relative predictive performance can compared. value 1 obtained, IV row said “completely dominate” IV column. Conversely, value 0 obtained, IV row said “completely dominated ” IV column.","code":"Complete Dominance Proportions:        > am > cyl > carb am >     NA     0      1 cyl >     1    NA      1 carb >    0     0     NA"},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"points-of-note-complete-dominance","dir":"Articles","previous_headings":"Concepts in Application > Complete Dominance Proportions","what":"Points of Note: Complete Dominance","title":"Conceptual Introduction to Dominance Analysis","text":"Complete dominance designations stringent designations comparable sub-models IV must larger comparison IV “conditionally dominates” label ascribed relationship. sorts sub-models qualify ‘comparable’ discussed later. Also note complete dominance implies conditional general dominance , , reverse. IV can conditionally generally, completely, dominate another IV.","code":""},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"dominance-statistics-and-designations-key-computational-details","dir":"Articles","previous_headings":"","what":"Dominance Statistics and Designations: Key Computational Details","title":"Conceptual Introduction to Dominance Analysis","text":"DA methodology currently implemented domir relatively assumption-free model agnostic computationally expensive methodology follows way Shapley value decomposition originally formulated. sections begin providing analogy think computation DA results, outline exactly dominance statistic designation determined, well extend example applying computation context example.","code":""},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"computational-implementation-all-possible-orders","dir":"Articles","previous_headings":"Dominance Statistics and Designations: Key Computational Details","what":"Computational Implementation: All Possible Orders","title":"Conceptual Introduction to Dominance Analysis","text":"DA requires evaluating contribution IVs make prediction given possible orders included prediction model. noted , experimental design-like approach possible combinations IVs included excluded estimated sub-models. \\(p\\) IVs model \\(2^p\\) sub-models estimated. experimental design-like approach method makes widely applicable across predictive models fit statistic values computationally expensive additional IV added model results geometric increase number required sub-models.","code":""},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"da-results-the-full-factorial-design","dir":"Articles","previous_headings":"Dominance Statistics and Designations: Key Computational Details","what":"DA Results: The Full-Factorial Design","title":"Conceptual Introduction to Dominance Analysis","text":"DA results related lm model three IVs discussed composed 8 sub-models \\(R^2\\) values. domir function, supplied predictive modeling function can record sub-model’s results, can adapted capture sub-model’s \\(R^2\\) value along IVs comprise . code constructs wrapper function export results sub-model external data frame. code produce results complex line commented note purpose. wrapper function replaces lm call domir , DA executed, sub-models’ data captured illustration come. printed result DA_results shows domir runs 7 sub-models; different combination IVs. Note , default, sub-model IVs excluded assumed result fit statistic value 0 estimated directly (can changed .adj argument). \\(R^2\\) values recorded DA_results used compute dominance statistics designations reported .","code":"lm_capture <-    function(formula, data, ...) { # wrapper program that accepts formula, data, and ellipsis arguments     count <<- count + 1 # increment counter in enclosing environment     lm_obj <- lm(formula, data = data, ...) # estimate 'lm' model and save object     DA_results[count, \"formula\"] <<-        deparse(formula) # record string version of formula passed in 'DA_results' in enclosing environment     DA_results[count, \"R^2\"] <<-        summary(lm_obj)[[\"r.squared\"]] # record R^2 in 'DA_results' in enclosing environment     summary(lm_obj)[[\"r.squared\"]] # return R^2   }  count <- 0 # initialize the count indicating the row in which the results will fill-in  DA_results <- # container data frame in which to record results   data.frame(formula = rep(\"\", times = 2^3-1),               `R^2` = rep(NA, times = 2^3-1),               check.names = FALSE)  lm_da <- domir(mpg ~ am + cyl + carb, # implement the DA with the wrapper                lm_capture,                 data = mtcars)  DA_results #>                 formula       R^2 #> 1 mpg ~ am + cyl + carb 0.8113023 #> 2              mpg ~ am 0.3597989 #> 3             mpg ~ cyl 0.7261800 #> 4        mpg ~ am + cyl 0.7590135 #> 5            mpg ~ carb 0.3035184 #> 6       mpg ~ am + carb 0.7036726 #> 7      mpg ~ cyl + carb 0.7405408"},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"complete-dominance-proportions-1","dir":"Articles","previous_headings":"Dominance Statistics and Designations: Key Computational Details > DA Results: The Full-Factorial Design","what":"Complete Dominance Proportions","title":"Conceptual Introduction to Dominance Analysis","text":"Complete dominance proprtions two IVs computed : \\[C_{X_vX_z} =\\, \\frac{\\Sigma^{2^{p-2}}_{j=1}{ \\{\\begin{matrix} \\, F_{X_v\\; \\cup\\;S_j}\\, > F_{X_z\\; \\cup\\;S_j}\\, \\,\\, 1\\, \\\\ \\, F_{X_v\\; \\cup\\;S_j}\\, \\le F_{X_z\\; \\cup\\;S_j}\\,\\, \\,0\\end{matrix} }}{2^{p-2}}\\] \\(X_v\\) \\(X_z\\) two IVs, \\(S_j\\) distinct set IVs model including \\(X_v\\) \\(X_z\\) can include null set (\\(\\emptyset\\)) IVs, \\(F\\) model fit statistic. computation proportion comparable sub-models \\(X_v\\) greater \\(X_z\\). results DA_results can used compute complete dominance proportions. comparison begins results cyl. Complete Dominance Comparisons: versus cyl rows table aligned comparable models rows. applied example, \\(S_j\\) sets \\(\\emptyset\\) (.e., null set) IVs set also including carb. \\(R^2\\) values across comparable models show cyl larger \\(R^2\\) values , thus completely dominates, . Complete Dominance Comparisons: versus carb \\(S_j\\) sets , , \\(\\emptyset\\) set also including cyl. \\(R^2\\) values across comparable models show larger \\(R^2\\) values completely dominates carb. Complete Dominance Comparisons: cyl versus carb Finally, \\(S_j\\) sets \\(\\emptyset\\) set also including . \\(R^2\\) values across comparable models show cyl larger \\(R^2\\) values completely dominates carb. three sets comparisons represented Complete_Dominance matrix series proportions. Note diagonal matrix NA values conceptually useless compare IV .","code":"lm_da$Complete_Dominance #>        >_am >_cyl >_carb #> am_>     NA     0      1 #> cyl_>     1    NA      1 #> carb_>    0     0     NA"},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"computing-conditional-dominance","dir":"Articles","previous_headings":"Dominance Statistics and Designations: Key Computational Details > DA Results: The Full-Factorial Design","what":"Computing Conditional Dominance","title":"Conceptual Introduction to Dominance Analysis","text":"Conditional dominance statistics computed : \\[C^i_{X_v} = \\Sigma^{\\begin{bmatrix}p-1\\\\-1\\end{bmatrix}}_{=1}{\\frac{F_{X_v\\; \\cup\\; S_i}\\, - F_{S_i}}{\\begin{bmatrix}p-1\\\\-1\\end{bmatrix}}}\\] \\(S_i\\) subset IVs including \\(X_v\\) \\(\\begin{bmatrix}p-1\\\\-1\\end{bmatrix}\\) number distinct combinations produced choosing number elements bottom value (\\(-1\\)) given number elements top value (\\(p-1\\); .e., value produced choose(p-1, -1)). effect, formula amounts average differences model containing \\(X_v\\) comparable model containing number IVs model total. values reflect effect including IV specific order model. applied results DA_results, ’s conditional dominance statistics computed following differences: Conditional Dominance Computations: One IV/Alone Conditional Dominance Computations: Two IVs Conditional Dominance Computations: Three IVs/Full Model rows table represent difference recorded conditional dominance statistics computation. position one, two, three comparison tables, model presented first (minuend) comparable model without presented second (subtrahend)—first IV comparison table, model intercept model , noted , assumed value 0. difference presented last. table, differences averaged resulting 0.36 value first, r round(lm_da$Conditional_Dominance[\"\", \"``include_at_``2\"], digits = 3) second, r round(lm_da$Conditional_Dominance[\"\", \"``include_at_``3\"], digits = 3) third. Next computations cyl reported. Conditional Dominance Computations: cyl One IV/Alone Conditional Dominance Computations: cyl Two IVs Conditional Dominance Computations: cyl Three IVs/Full Model , differences averaged resulting 0.726 value first, 0.418 second, 0.108 third. Finally, computations carb. Conditional Dominance Computations: carb One IV/Alone Conditional Dominance Computations: carb Two IVs Conditional Dominance Computations: carb Three IVs/Full Model , differences averaged resulting 0.304 value first, 0.179 second, 0.052 third. nine values populate conditional dominance statistic matrix. conditional dominance matrix’s values can compared creating series logical designations indicating whether IV conditionally dominates . comparisons begin cyl Conditional Dominance Designation: Compared cyl table transpose conditional dominance statistic matrix additional comparison column indicating whether first IV/’s conditional dominance statistic inclusion position greater second IV/cyl’s position. Conditional dominance determined values TRUE FALSE; case, cyl seen conditionally dominate values FALSE. Next comparison carb Conditional Dominance Designation: Compared carb conditionally dominates carb values TRUE. final comparison cyl carb Conditional Dominance Designation: cyl Compared carb cyl also conditionally dominates carb values TRUE. Another way looking conditional dominance graphing trajectory IV across positions conditional dominance matrix. IV’s line crosses another IV’s line, conditional dominance relationship two IVs determined. graphic depicting trajectory three IVs focal model depicted .  graph confirms three IV’s lines never cross thus clear set conditional dominance designations. mentioned Concepts Application section, knew three IVs complete dominance designations relative one another, necessarily also conditional dominance designations relative one another.","code":"lm_da$Conditional_Dominance #>      include_at_1 include_at_2 include_at_3 #> am      0.3597989    0.2164938   0.07076149 #> cyl     0.7261800    0.4181185   0.10762967 #> carb    0.3035184    0.1791172   0.05228872"},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"computing-general-dominance","dir":"Articles","previous_headings":"Dominance Statistics and Designations: Key Computational Details > DA Results: The Full-Factorial Design","what":"Computing General Dominance","title":"Conceptual Introduction to Dominance Analysis","text":"General dominance computed : \\[C_{X_v} = \\Sigma^p_{=1}{\\frac{C^i_{X_v}}{p}}\\] , \\(C^{}_{X_x}\\) conditional dominance statistics \\(X_v\\) \\(\\) IVs. Hence, general dominance statistics arithmetic average conditional dominance statistics IV. applied ’s results, general dominance statistic value : General Dominance Computations: Next cyl. General Dominance Computations: cyl lastly carb. General Dominance Computations: carb Taken set, values represent general dominance statistic/Shapley value decomposition vector: general dominance statistic vector can also used way similar complete conditional dominance designations ranking value. General Dominance Designations rank ordering shows generally dominated cyl, generally dominates carb, cyl also generally dominates carb. knew three IVs complete conditional dominance designations relative one another, necessarily also general dominance designations relative one another.","code":"lm_da$General_Dominance #>        am       cyl      carb  #> 0.2156848 0.4173094 0.1783081"},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"general-dominanceshapley-values-weighted-average-of-all-submodels","dir":"Articles","previous_headings":"Dominance Statistics and Designations: Key Computational Details > DA Results: The Full-Factorial Design > Computing General Dominance","what":"General Dominance/Shapley Values: Weighted Average of All Submodels","title":"Conceptual Introduction to Dominance Analysis","text":"also worth pointing subtle feature general dominance statistics tends explicit discussions Shapley value decomposition. feature general dominance statistic weighted average \\(2^p\\) fit statistics. see case, first recall computations related obtaining conditional dominance statistics IV. look entries three tables, 8 models included either minuend subtrahend. general dominance statistics just average three conditional dominance statistics. Hence, general dominance statistics include value every model. conditional dominance statistics cyl carb re-arrange models otherwise use information produce general dominance statistics.","code":""},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"strongest-dominance-designations","dir":"Articles","previous_headings":"Dominance Statistics and Designations: Key Computational Details","what":"Strongest Dominance Designations","title":"Conceptual Introduction to Dominance Analysis","text":"Whereas dominance designations made example , strongest designation two IVs likely primary interest strongest designation, noted , implies weaker designations. access strongest dominance designations, DA object can submitted summary function. result summary function produces Strongest_Dominance element consistent expectation three IV interrelationships complete dominance designations .","code":"summary(lm_da)$Strongest_Dominance #>                                                                             #>  \"am\"                         \"am\"                   \"cyl\"                  #>  \"is completely dominated by\" \"completely dominates\" \"completely dominates\" #>  \"cyl\"                        \"carb\"                 \"carb\""},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"parting-thoughts","dir":"Articles","previous_headings":"","what":"Parting Thoughts","title":"Conceptual Introduction to Dominance Analysis","text":"“Relative importance” concept used many different ways statistics data science. author’s view, crucial, rarely acknowledged, difference DA many relative importance statistics produced methods DA, many methods probably useful model selection model evaluation. making distinction model selection importance, follow work Azen, Budescu, Reiser (2001) distinguish concept IV criticality IV importance.","code":""},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"criticality-model-selection","dir":"Articles","previous_headings":"Parting Thoughts","what":"Criticality: Model Selection","title":"Conceptual Introduction to Dominance Analysis","text":"many cases, methods focus relative importance probably best used model selection. applied model selection, method identify IV included model . process determining whether IV included model desribed Azen et al. reflecting IV Criticality. view author, methods posterior inclusion probability, Akaike weights, permutation importance actually IV criticality, opposed importance, measures. methods criticality methods tend informative identifying whether IV trivial non-trivial conribution prediction less informative identifying magnitude contribution.","code":""},{"path":"https://jluchman.github.io/domir/articles/domir_basics.html","id":"importance-model-evaluation","dir":"Articles","previous_headings":"Parting Thoughts","what":"Importance: Model Evaluation","title":"Conceptual Introduction to Dominance Analysis","text":"Model evaluation differs model selection seeks determine whether IVs model, rather compares terms impact model conditional included. Thus, importance methods assume model passed model selection phase predictors model non-trivial effects. DA method implemented domir function importance method sense assumes predictive model used “pre-selected” passed model selection procedures user confident IVs model , fact, reasonable include. results DA similar methods provide information relative contribution prediction assists model evaluation.","code":""},{"path":"https://jluchman.github.io/domir/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph Luchman. Author, maintainer.","code":""},{"path":"https://jluchman.github.io/domir/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Luchman J (2024). domir: Tools Support Relative Importance Analysis. R package version 1.2.0, https://jluchman.github.io/domir/, https://github.com/jluchman/domir.","code":"@Manual{,   title = {domir: Tools to Support Relative Importance Analysis},   author = {Joseph Luchman},   year = {2024},   note = {R package version 1.2.0, https://jluchman.github.io/domir/},   url = {https://github.com/jluchman/domir}, }"},{"path":[]},{"path":[]},{"path":"https://jluchman.github.io/domir/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Tools to Support Relative Importance Analysis","text":"domir package supports determining relative importance inputs (.e., independent variables, predictors, features referred names package) user’s statistical machine learning model. intention package provide flexible user interface Dominance Analysis—relatively assumption-free methodology comparing predictive value, usefulness, importance associated model inputs/names. Dominance analysis resolves indeterminancy ascribing value returned predictive modeling function inputs/names possible analytically. common use case application dominance analysis comparing inputs/names terms contribution predictive model’s fit statistic metric.","code":""},{"path":"https://jluchman.github.io/domir/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools to Support Relative Importance Analysis","text":"install recent version domir CRAN use: install.packages(\"domir\") domir also used computational engine underlying dominance_analysis() function parameters package easystats framework/collection.","code":""},{"path":"https://jluchman.github.io/domir/index.html","id":"what-domir-does","dir":"","previous_headings":"","what":"What domir Does","title":"Tools to Support Relative Importance Analysis","text":"domir computes three different sets results based set inputs/names values returned function like linear regression model. lm(mpg ~ + vs + cyl, data = mtcars) Using variance explained R2 fit statistic implemented lm‘s summary method returned value, domir can implement ’classic’ dominance analysis1 : domir requires set inputs/names, submitted formula specialized formula_list object, function accepts input/names returns single, numeric value. Note use wrapper function, lm_wrapper, accepts formula returns R2. ‘analysis pipeline’ wrapper functions necessary effective use domir ability use adapt predictive models computational engine used domir makes package able apply almost model. domir default reports complete dominance proportions, conditional dominance values, general dominance values. Complete dominance proportions proportion subsets inputs/names name row obtains bigger value name column. Conditional dominance values average value associated name included sequentially possible position sequence name slots. General dominance values average value associated name across possible ways including name sequence names. values also equivalent Shapley Value name.","code":"lm_wrapper <-          function(formula, data) {     lm(formula, data = data) |>        summary() |>       _[[\"r.squared\"]]   }  domir(mpg ~ am + vs + cyl, lm_wrapper, data = mtcars) ## Overall Value:      0.7619773  ##  ## General Dominance Values: ##     General Dominance Standardized Ranks ## am          0.1774892    0.2329324     3 ## vs          0.2027032    0.2660226     2 ## cyl         0.3817849    0.5010450     1 ##  ## Conditional Dominance Values: ##     Include At: 1 Include At: 2 Include At: 3 ## am      0.3597989     0.1389842   0.033684441 ## vs      0.4409477     0.1641982   0.002963748 ## cyl     0.7261800     0.3432799   0.075894823 ##  ## Complete Dominance Proportions: ##       > am > vs > cyl ## am >    NA  0.5     0 ## vs >   0.5   NA     0 ## cyl >  1.0  1.0    NA"},{"path":"https://jluchman.github.io/domir/index.html","id":"comparison-with-existing-relative-importance-packages","dir":"","previous_headings":"","what":"Comparison with Existing Relative Importance Packages","title":"Tools to Support Relative Importance Analysis","text":"Several relative importance packages can produce results identical domir specific circumstances. focus discussing two relevant comparison packages . calc.relimpo function relaimpo package type = \"lmg\" produces general dominance values lm example : relaimpo importance analysis linear regression variance explained R2 fit statistic optimized analyze model-fit statistic pairing across multiple ways submitting data (.e., correlation matrices, fitted lm object, data.frame). dominanceAnalysis function dominanceAnalysis produces many statistics domir example : dominanceAnalysis relative importance specific model-fit statistic pairs implemented using S3 methods focused model types implement similar parameters::dominance_analysis works using custom implementation dependent insight package parse model components implement methodology.","code":"relaimpo::calc.relimp(mpg ~ am + vs + cyl, data = mtcars, type = \"lmg\") ## Response variable: mpg  ## Total response variance: 36.3241  ## Analysis based on 32 observations  ##  ## 3 Regressors:  ## am vs cyl  ## Proportion of variance explained by model: 76.2% ## Metrics are not normalized (rela=FALSE).  ##  ## Relative importance metrics:  ##  ##           lmg ## am  0.1774892 ## vs  0.2027032 ## cyl 0.3817849 ##  ## Average coefficients for different model sizes:  ##  ##            1X       2Xs       3Xs ## am   7.244939  4.316851  3.026480 ## vs   7.940476  2.995142  1.294614 ## cyl -2.875790 -2.795816 -2.137632 dominanceanalysis::dominanceAnalysis(lm(mpg ~ am + vs + cyl, data = mtcars)) ##  ## Dominance analysis ## Predictors: am, vs, cyl  ## Fit-indices: r2  ##  ## * Fit index:  r2  ##     complete conditional general ## am                               ## vs                            am ## cyl    am,vs       am,vs   am,vs ##  ## Average contribution: ##   cyl    vs    am  ## 0.382 0.203 0.177"},{"path":"https://jluchman.github.io/domir/index.html","id":"further-examples","dir":"","previous_headings":"","what":"Further Examples","title":"Tools to Support Relative Importance Analysis","text":"examples domirs functionality populated domir wiki.","code":""},{"path":"https://jluchman.github.io/domir/reference/domin.html","id":null,"dir":"Reference","previous_headings":"","what":"Dominance analysis supporting formula-based modeling functions — domin","title":"Dominance analysis supporting formula-based modeling functions — domin","text":"Computes dominance statistics predictive modeling functions accept formula.","code":""},{"path":"https://jluchman.github.io/domir/reference/domin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dominance analysis supporting formula-based modeling functions — domin","text":"","code":"domin(   formula_overall,   reg,   fitstat,   sets = NULL,   all = NULL,   conditional = TRUE,   complete = TRUE,   consmodel = NULL,   reverse = FALSE,   ... )"},{"path":"https://jluchman.github.io/domir/reference/domin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dominance analysis supporting formula-based modeling functions — domin","text":"formula_overall object class formula can coerced class formula use modeling function reg.  terms right hand side formula used separate entries dominance analysis. valid formula_overall entry necessary, even submitting entries sets, define valid left hand side prediction equation (see examples).  function called reg must accept one responses left hand side. reg function implementing predictive (\"reg\"ression) model called. String function names (e.g., \"lm\"), function names (e.g., lm), anonymous functions (e.g., function(x) lm(x)) acceptable entries.  argument's contents passed .call thus function call .call accept valid. predictive model reg must accept formula object first argument must adapted wrapper function. fitstat List providing arguments call fit statistic extracting function (see details). fitstat list must least length two. first element fitstat must function implementing fit statistic extraction. String function names (e.g., \"summary\"), function names (e.g., summary), anonymous functions (e.g., function(x) summary(x)) acceptable entries. element's contents passed .call thus function call .call accept valid. second element fitstat must named element list vector produced fit extractor function called first element fitstat.  element must string (e.g., \"r.squared\"). list elements beyond second submitted additional arguments fit extractor function call. fit statistic extractor function first list element fitstat must accept model object produced predictive modeling function reg first argument adapted wrapper function. fit statistic produced must scalar valued (.e., vector length 1). sets list element comprised vectors containing variable/factor names formula coercible strings. separate list element-vector sets concatenated (list element-vector length > 1) used entry dominance analysis along terms formula_overall. vector variable/factor names formula coercible strings.  entries vector concatenated (length > 1) used dominance analysis.  Rather value fit statistic associated terms removed dominance analysis; vector used like set covariates. entries removed considered additional component explains fit metric.  result, general dominance statistics longer sum overall fit metric standardized vector longer sum 1. conditional Logical.  FALSE conditional dominance matrix computed. conditional dominance desired importance criterion, avoiding computing conditional dominance matrix can save computation time. complete Logical.  FALSE complete dominance matrix computed. complete dominance desired importance criterion, avoiding computing complete dominance designations can save computation time. consmodel vector variable/factor names, formula coercible strings, formula terms (.e., 1 indicate intercept).  entries vector concatenated (length > 1) , like entries , used dominance analysis; vector used adjustment baseline value overall fit statistic. use consmodel changes interpretation general conditional dominance statistics.  consmodel used, general conditional dominance statistics reflect difference constant model overall fit statistic values. Typical usage consmodel pass \"1\" set intercept baseline control value baseline model's fit statistic value 0 (e.g., using AIC BIC fit statistic; see examples). , vector used set baseline fit statistic non-0. reverse Logical. TRUE standardized vector, ranks, complete dominance designations reversed interpretation. argument changed TRUE fit statistic used decreases better fit data (e.g., AIC, BIC). ... Additional arguments passed function call reg argument.","code":""},{"path":"https://jluchman.github.io/domir/reference/domin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dominance analysis supporting formula-based modeling functions — domin","text":"Returns object class \"domin\". object class \"domin\" list composed following elements: General_Dominance Vector general dominance statistics. Standardized Vector general dominance statistics normalized sum 1. Ranks Vector ranks applied general dominance statistics. Conditional_Dominance Matrix conditional dominance statistics.  row represents term; column represents order terms. Complete_Dominance Logical matrix complete dominance designations. term represented row indicates dominance status; terms represented columns indicates dominated-status. Fit_Statistic_Overall Value fit statistic full model. Fit_Statistic_All_Subsets Value fit statistic associated terms . Fit_Statistic_Constant_Model Value fit statistic associated terms consmodel. Call matched call. Subset_Details List containing full model descriptions terms full model source.","code":""},{"path":"https://jluchman.github.io/domir/reference/domin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dominance analysis supporting formula-based modeling functions — domin","text":"domin automates computation possible combination entries dominance analysis (DA), creation formula objects based entries, modeling calls/fit statistic capture, computation dominance statistics user. domin accepts \"deconstructed\" set inputs \"reconstructs\" prior formulating coherent predictive modeling call. One specific instance deconstruction generating number entries DA. number entries taken terms formula_overall separate list element vectors sets. entries concatenated single formula, combined entries , submitted predictive modeling function reg.  different combination entries DA forms different formula thus different model estimate. example, consider domin call: domin(y ~ x1 + x2, lm, list(summary, \"r.squared\"), sets = list(c(\"x3\", \"x4\")), = c(\"c1\", \"c2\"), data = mydata)) call records three entries results seven (.e., \\(2^3 - 1\\)) different combinations: x1 x2 x3, x4 x1, x2 x1, x3, x4 x2, x3, x4 x1, x2, x3, x4 domin parses formula_overall obtain terms combines sets.  parsing formula_overall, processing available stats package applied.  Note domin programmed process terms order > 1 (.e., interactions/products) appropriately (.e., include presence lower order component terms). domin also allow offset terms. combinations, predictive models constructed called. predictive model call includes entries , applies appropriate formula, reconstructs function . seven combinations imply following series predictive model calls: lm(y ~ x1 + c1 + c2, data = mydata) lm(y ~ x2 + c1 + c2, data = mydata) lm(y ~ x3 + x4 + c1 + c2, data = mydata) lm(y ~ x1 + x2 + c1 + c2, data = mydata) lm(y ~ x1 + x3 + x4 + c1 + c2, data = mydata) lm(y ~ x2 + x3 + x4 + c1 + c2, data = mydata) lm(y ~ x1 + x2 + x3 + x4 + c1 + c2, data = mydata) possible use domin sets (.e., IVs formula_overall; see examples ). must least two entries DA domin run. called predictive models submitted fit extractor function implied entries fitstat. applying example , seven predictive models' objects individually passed follows: summary(lm_obj)[\"r.squared\"] lm_obj model object returned lm. entries fitstat must list follow specific structure: list(fit_function, element_name, ...) fit_function First element function applied object produced reg function element_name Second element name element object returned fit_function used fit statistic.  fit statistic must scalar-valued/length 1 ... Subsequent elements additional arguments passed fit_function case model object returned reg includes fit statistic without need extractor function, user can apply anonymous function following required format extract .","code":""},{"path":"https://jluchman.github.io/domir/reference/domin.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Dominance analysis supporting formula-based modeling functions — domin","text":"domin R port Stata command name (see Luchman, 2021). domin superseded domir.","code":""},{"path":"https://jluchman.github.io/domir/reference/domin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dominance analysis supporting formula-based modeling functions — domin","text":"Luchman, J. N. (2021). Relative importance analysis Stata using dominance analysis: domin domme. Stata Journal, 21, 2. doi: 10.1177/1536867X211025837.","code":""},{"path":"https://jluchman.github.io/domir/reference/domin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dominance analysis supporting formula-based modeling functions — domin","text":"","code":"## Basic linear model with r-square  domin(mpg ~ am + vs + cyl,    lm,    list(\"summary\", \"r.squared\"),    data = mtcars) #> Overall Fit Statistic:      0.7619773  #>  #> General Dominance Statistics: #>     General Dominance Standardized Ranks #> am          0.1774892    0.2329324     3 #> vs          0.2027032    0.2660226     2 #> cyl         0.3817849    0.5010450     1 #>  #> Conditional Dominance Statistics: #>        IVs: 1    IVs: 2      IVs: 3 #> am  0.3597989 0.1389842 0.033684441 #> vs  0.4409477 0.1641982 0.002963748 #> cyl 0.7261800 0.3432799 0.075894823 #>  #> Complete Dominance Designations: #>             Dmnated?am Dmnated?vs Dmnated?cyl #> Dmnates?am          NA         NA       FALSE #> Dmnates?vs          NA         NA       FALSE #> Dmnates?cyl       TRUE       TRUE          NA #>    ## Linear model including sets  domin(mpg ~ am + vs + cyl,    lm,    list(\"summary\", \"r.squared\"),    data = mtcars,    sets = list(c(\"carb\", \"gear\"), c(\"disp\", \"wt\"))) #> Overall Fit Statistic:      0.851596  #>  #> General Dominance Statistics: #>      General Dominance Standardized Ranks #> am          0.09446712    0.1109295     5 #> vs          0.10957434    0.1286694     4 #> cyl         0.19767129    0.2321186     3 #> set1        0.20978183    0.2463396     2 #> set2        0.24010141    0.2819429     1 #>  #> Conditional Dominance Statistics: #>         IVs: 1     IVs: 2     IVs: 3      IVs: 4       IVs: 5 #> am   0.3597989 0.07688044 0.01944026 0.010342235 0.0058737118 #> vs   0.4409477 0.09276443 0.01167477 0.001799976 0.0006848322 #> cyl  0.7261800 0.19877978 0.04304518 0.015251991 0.0050994979 #> set1 0.7343966 0.20916653 0.05695739 0.030887988 0.0175006137 #> set2 0.7809306 0.24778381 0.08623238 0.051865275 0.0336949874 #>  #> Complete Dominance Designations: #>              Dmnated?am Dmnated?vs Dmnated?cyl Dmnated?set1 Dmnated?set2 #> Dmnates?am           NA         NA          NA        FALSE        FALSE #> Dmnates?vs           NA         NA       FALSE        FALSE        FALSE #> Dmnates?cyl          NA       TRUE          NA        FALSE        FALSE #> Dmnates?set1       TRUE       TRUE        TRUE           NA        FALSE #> Dmnates?set2       TRUE       TRUE        TRUE         TRUE           NA #>  #> Components of sets: #> set1 : carb gear  #> set2 : disp wt  #>    ## Multivariate linear model with custom multivariate r-square function  ## and all subsets variable  Rxy <- function(obj, names, data) {    return(list(\"r2\" = cancor(predict(obj),         as.data.frame(mget(names, as.environment(data))))[[\"cor\"]][1]^2))         }         domin(cbind(wt, mpg) ~ vs + cyl + am,    lm,    list(Rxy, \"r2\", c(\"mpg\", \"wt\"), mtcars),    data = mtcars,    all = c(\"carb\")) #> Overall Fit Statistic:      0.8384378  #> All Subsets Fit Statistic:  0.3137993  #>  #> General Dominance Statistics: #>     General Dominance Standardized Ranks #> vs         0.07169528   0.08551056     3 #> cyl        0.21206213   0.25292531     2 #> am         0.24088099   0.28729741     1 #>  #> Conditional Dominance Statistics: #>        IVs: 1     IVs: 2      IVs: 3 #> vs  0.1761112 0.03768107 0.001293536 #> cyl 0.4307370 0.17804791 0.027401478 #> am  0.4311156 0.20686678 0.084660605 #>  #> Complete Dominance Designations: #>             Dmnated?vs Dmnated?cyl Dmnated?am #> Dmnates?vs          NA       FALSE      FALSE #> Dmnates?cyl       TRUE          NA      FALSE #> Dmnates?am        TRUE        TRUE         NA #>  #> All subsets variables: carb   ## Sets only  domin(mpg ~ 1,    lm,    list(\"summary\", \"r.squared\"),    data = mtcars,    sets = list(c(\"am\", \"vs\"), c(\"cyl\", \"disp\"), c(\"qsec\", \"carb\"))) #> Overall Fit Statistic:      0.8344278  #>  #> General Dominance Statistics: #>      General Dominance Standardized Ranks #> set1         0.3197289    0.3831715     2 #> set2         0.3677706    0.4407459     1 #> set3         0.1469282    0.1760826     3 #>  #> Conditional Dominance Statistics: #>         IVs: 1     IVs: 2     IVs: 3 #> set1 0.6860825 0.24773691 0.02536743 #> set2 0.7595658 0.29577856 0.04796742 #> set3 0.3092531 0.07493621 0.05659539 #>  #> Complete Dominance Designations: #>              Dmnated?set1 Dmnated?set2 Dmnated?set3 #> Dmnates?set1           NA        FALSE           NA #> Dmnates?set2         TRUE           NA           NA #> Dmnates?set3           NA           NA           NA #>  #> Components of sets: #> set1 : am vs  #> set2 : cyl disp  #> set3 : qsec carb  #>     ## Constant model using AIC  domin(mpg ~ am + carb + cyl,    lm,    list(function(x) list(aic = extractAIC(x)[[2]]), \"aic\"),    data = mtcars,    reverse = TRUE, consmodel = \"1\") #> Overall Fit Statistic:      68.57997  #> Constant Model Fit Statistic:  115.9434  #>  #> General Dominance Statistics: #>      General Dominance Standardized Ranks #> am          -11.392847    0.2405407     2 #> carb         -8.862961    0.1871265     3 #> cyl         -27.107674    0.5723328     1 #>  #> Conditional Dominance Statistics: #>          IVs: 1    IVs: 2     IVs: 3 #> am   -12.271136 -13.71691  -8.190499 #> carb  -9.574847 -11.18702  -5.827017 #> cyl  -39.449099 -29.43173 -12.442191 #>  #> Complete Dominance Designations: #>              Dmnated?am Dmnated?carb Dmnated?cyl #> Dmnates?am           NA         TRUE       FALSE #> Dmnates?carb      FALSE           NA       FALSE #> Dmnates?cyl        TRUE         TRUE          NA #>"},{"path":"https://jluchman.github.io/domir/reference/dominance_scalar.html","id":null,"dir":"Reference","previous_headings":"","what":"Dominance analysis meta-function that returns scalar — dominance_scalar","title":"Dominance analysis meta-function that returns scalar — dominance_scalar","text":"Internal dominance analysis computation function assuming scalar vector length 1 returned value. intended called user.","code":""},{"path":"https://jluchman.github.io/domir/reference/dominance_scalar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dominance analysis meta-function that returns scalar — dominance_scalar","text":"","code":"dominance_scalar(   function2call,   args_list,   value_w_all_names,   do_cdl,   do_cpt,   reverse,   cluster,   progress )"},{"path":"https://jluchman.github.io/domir/reference/domir-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Tools to Support Relative Importance Analysis — domir-package","title":"Tools to Support Relative Importance Analysis — domir-package","text":"Methods apply dominance analysis-based relative importance analysis predictive modeling functions.","code":""},{"path":"https://jluchman.github.io/domir/reference/domir-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tools to Support Relative Importance Analysis — domir-package","text":"package supports determination importance inputs (.e., independent variables, predictors, features, parameter estimates; called 'names' package) using dominance analysis (Azen & Budescu, 2004; Budescu, 1993). Dominance analysis resolves indeterminancy ascribing value returned predictive modeling function inputs/names possible analytically. common use case application dominance analysis comparing inputs/names terms contribution predictive model's fit statistic metric. Dominance analysis common, generally well accepted, method determining relative importance inputs/names , part, conceptual extension well-known Shapley value decomposition (e.g., Grömping, 2007; Lipovetsky & Conklin, 2001).","code":""},{"path":"https://jluchman.github.io/domir/reference/domir-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Tools to Support Relative Importance Analysis — domir-package","text":"Azen, R., & Budescu, D. V. (2003). dominance analysis approach comparing predictors multiple regression. Psychological Methods, 8(2), 129-148. doi:10.1037/1082-989X.8.2.129 Budescu, D. V. (1993). Dominance analysis: new approach problem relative importance predictors multiple regression. Psychological Bulletin, 114(3), 542-551. doi:10.1037/0033-2909.114.3.542 Grömping, U. (2007). Estimators relative importance linear regression based variance decomposition. American Statistician, 61(2), 139-147. doi:10.1198/000313007X188252 Lipovetsky, S, & Conklin, M. (2001). Analysis regression game theory approach. Applied Stochastic Models Business Industry, 17(4), 319-330. doi:10.1002/asmb.446","code":""},{"path":"https://jluchman.github.io/domir/reference/domir-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tools to Support Relative Importance Analysis — domir-package","text":"Joseph Luchman jluchman@gmail.com","code":""},{"path":"https://jluchman.github.io/domir/reference/domir.html","id":null,"dir":"Reference","previous_headings":"","what":"Dominance analysis methods — domir","title":"Dominance analysis methods — domir","text":"Parses input object obtain list names, determines required combinations subsets name list, submits name list subsets function input type, computes dominance decomposition statistics based returned values function.","code":""},{"path":"https://jluchman.github.io/domir/reference/domir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dominance analysis methods — domir","text":"","code":"domir(.obj, ...)  # S3 method for formula domir(   .obj,   .fct,   .set = NULL,   .wst = NULL,   .all = NULL,   .adj = FALSE,   .cdl = TRUE,   .cpt = TRUE,   .rev = FALSE,   .cst = NULL,   .prg = FALSE,   ... )  # S3 method for formula_list domir(   .obj,   .fct,   .set = NULL,   .wst = NULL,   .all = NULL,   .adj = FALSE,   .cdl = TRUE,   .cpt = TRUE,   .rev = FALSE,   .cst = NULL,   .prg = FALSE,   ... )"},{"path":"https://jluchman.github.io/domir/reference/domir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dominance analysis methods — domir","text":".obj formula formula_list. Parsed produce list names. Combinations subsets name list sapply-ed .fct. name list subsets submitted .fct formatted class .obj submitted .fct first, unnamed argument. ... Passes arguments methods method dispatch; passes arguments function .fct function execution. .fct function string function name. Applied subsets elements received .obj. Must return length 1/scalar, numeric, atomic vector. .set list. Must comprised elements class .obj. Elements list can named. .wst yet used. .formula formula_list. Must class .obj. .adj Logical. TRUE model including intercept submitted .fct value returned subtracted values returned subsets dominance analysis. .cdl Logical. FALSE conditional dominance matrix computed. .cpt Logical. FALSE complete dominance matrix computed. .rev Logical. TRUE standardized vector, ranks, complete dominance designations reversed interpretation. .cst Object class c(\"SOCKcluster\", \"cluster\") parallel-package. non-NULL, alter method collecting values combinations names using sapply parallel::parSapply. .prg Logical. TRUE progress bar displayed collection values indicate progress.","code":""},{"path":"https://jluchman.github.io/domir/reference/domir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dominance analysis methods — domir","text":"Returns object class \"domir\" composed : General_Dominance Vector general dominance values. Standardized Vector general dominance values normalized sum 1. Ranks Vector ranks applied general dominance values. Conditional_Dominance Matrix conditional dominance values. row represents element .obj; column represents number elements .obj subset. Complete_Dominance Matrix proportions subsets name row larger value name column. se proportions determine complete dominance value 1 0. Value Value returned .fct elements (.e., .obj, ., .adj. Value_All Value .fct associated elements included .; elements .adj, adjusted Value_Adjust. Value_Adjust Value .fct associated elements .adj. Call matched call.","code":""},{"path":[]},{"path":"https://jluchman.github.io/domir/reference/domir.html","id":"element-parsing","dir":"Reference","previous_headings":"","what":"Element Parsing","title":"Dominance analysis methods — domir","text":".objs parsed name list used determine required number combinations subsets name list included dominance analysis.  name list obtained depends .obj's class.","code":""},{"path":"https://jluchman.github.io/domir/reference/domir.html","id":"formula","dir":"Reference","previous_headings":"","what":"formula","title":"Dominance analysis methods — domir","text":"formula creates name list using terms formula. terms obtained using terms.formula. processing normally applied right hand side formula implemented (see formula). response/left hand side required , present, included formulas passed .fct.","code":""},{"path":"https://jluchman.github.io/domir/reference/domir.html","id":"formula-list","dir":"Reference","previous_headings":"","what":"formula_list","title":"Dominance analysis methods — domir","text":"formula_list creates name list response-term pairs. terms obtained using terms.formula applied individual formula list.","code":""},{"path":"https://jluchman.github.io/domir/reference/domir.html","id":"additional-details","dir":"Reference","previous_headings":"","what":"Additional Details","title":"Dominance analysis methods — domir","text":"default, names obtained .obj considered separate 'value-generating names' priority. value-generating name separate element computing combination subsets compared value-generating names. formulas formula_list elements assumed intercept except explicitly removed - 1 formula(s) .obj. removed, intercept removed formula(s) sapply-ed subset .fct. offsets included, passed, like intercepts, sapply-ing subsets .fct.","code":""},{"path":"https://jluchman.github.io/domir/reference/domir.html","id":"changing-element-parsing","dir":"Reference","previous_headings":"","what":"Changing Element Parsing","title":"Dominance analysis methods — domir","text":"methods' default behavior considers value-generating names equal priority can overriden using .set .arguments. Names .set .must also present .obj.","code":""},{"path":"https://jluchman.github.io/domir/reference/domir.html","id":"-set","dir":"Reference","previous_headings":"","what":".set","title":"Dominance analysis methods — domir","text":".set binds together value-generating names equal priority never separated submitted .fct. Thus, elements .set bound together contribute jointly returned value considered, effectively, single value-generating name. list elements .set named, name used returned results name set value-generating names bound together. .set thus considers value-generating names 'inseparable set' dominance analysis always included excluded together.","code":""},{"path":"https://jluchman.github.io/domir/reference/domir.html","id":"-all","dir":"Reference","previous_headings":"","what":".all","title":"Dominance analysis methods — domir","text":".gives immediate priority value-generating names. value-generating names .bound together, ascribed full amount returned value .fct, adjusted contribution value-generating names. value .fct ascribed value-generating names bound together .returned separately , directly compared , value-generating names. formula method .allowthe submitted formula left hand side. .includes value-generating names 'subsets' submitted dominance analysis effectively removes value associated set names.","code":""},{"path":"https://jluchman.github.io/domir/reference/domir.html","id":"-adj","dir":"Reference","previous_headings":"","what":".adj","title":"Dominance analysis methods — domir","text":".adj indicates intercept-model supplied .fct. intercept-subset given immediate priority value .fct ascribed removed value-generating names sets including .. formula method submit intercept-formula .fct. formula_list method creates separate, intercept-subset formulas list. formula formula_list methods respect user's removal intercept inclusion offset. .adj 'adjusts' returned value non-0 value-returning null model value generating names included. often useful predictive model's fit metric 0 predictive factors included model.","code":""},{"path":"https://jluchman.github.io/domir/reference/domir.html","id":"additional-details-1","dir":"Reference","previous_headings":"","what":"Additional Details","title":"Dominance analysis methods — domir","text":"methods submit combinations names object class .obj. formula .obj submit combinations names formulas .fct. formula_list .obj submit combinations subsets names formula_lists .fct. case .fct requires different class (e.g., character vector names, Formula::Formula see fmllst2Fml) subsets names processed .fct obtain correct class. subsets names submitted .fct first, unnamed argument.","code":""},{"path":"https://jluchman.github.io/domir/reference/domir.html","id":"-fct-as-analysis-pipeline","dir":"Reference","previous_headings":"","what":".fct as Analysis Pipeline","title":"Dominance analysis methods — domir","text":".fct expected complete analysis pipeline receives subset names class .obj uses names class submitted generate returned value appropriate type dominance analyze. Typically, returned value scalar fit statistic/metric extracted predictive model. current, atomic (.e., non-list), numeric scalars (.e., vectors length 1) allowed returned values. .fct argument strict names submitted returned value requirements functions used. series checks ensure submitted names returned value adhere requirements. checks include whether .obj can submitted .fct without producing error whether returned value .fct length 1, atomic, numeric vector. circumstances, user make named anonymous function supply .fct satisfy checks.","code":""},{"path":[]},{"path":"https://jluchman.github.io/domir/reference/domir.html","id":"formula-method","dir":"Reference","previous_headings":"","what":"formula method","title":"Dominance analysis methods — domir","text":"Prior version 1.1.0, formula method allowed formula submitted .adj. Submitting intercept-formula opposed logical depreciated submitting formula intercept defunct. formula formula_list methods can used pass responses, intercepts, offsets combinations names. user seeks include model components integral estimation (.e., random effect term lme4::glmer()) include update submitted formula formula_list imbedded .fct. Second-order higher terms (.e., interactions like ~ *b) parsed default used differently first-order terms producing subsets. values ascribed terms may valid unless user ensures second-order higher terms used appropriately .fct.","code":""},{"path":"https://jluchman.github.io/domir/reference/domir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dominance analysis methods — domir","text":"","code":"## Linear model returning r-square lm_r2 <-   function(fml, data) {     lm_res <- lm(fml, data = data)     summary(lm_res)[[\"r.squared\"]]  }  domir(mpg ~ am + vs + cyl, lm_r2, data = mtcars) #> Overall Value:      0.7619773  #>  #> General Dominance Values: #>     General Dominance Standardized Ranks #> am          0.1774892    0.2329324     3 #> vs          0.2027032    0.2660226     2 #> cyl         0.3817849    0.5010450     1 #>  #> Conditional Dominance Values: #>     Include At: 1 Include At: 2 Include At: 3 #> am      0.3597989     0.1389842   0.033684441 #> vs      0.4409477     0.1641982   0.002963748 #> cyl     0.7261800     0.3432799   0.075894823 #>  #> Complete Dominance Proportions: #>       > am > vs > cyl #> am >    NA  0.5     0 #> vs >   0.5   NA     0 #> cyl >  1.0  1.0    NA #>    ## Linear model including set domir(   mpg ~ am + vs + cyl + carb + gear + disp + wt,   lm_r2,   .set = list(~ carb + gear, ~ disp + wt),   data = mtcars ) #> Overall Value:      0.851596  #>  #> General Dominance Values: #>      General Dominance Standardized Ranks #> am          0.09446712    0.1109295     5 #> vs          0.10957434    0.1286694     4 #> cyl         0.19767129    0.2321186     3 #> set1        0.20978183    0.2463396     2 #> set2        0.24010141    0.2819429     1 #>  #> Conditional Dominance Values: #>      Include At: 1 Include At: 2 Include At: 3 Include At: 4 Include At: 5 #> am       0.3597989    0.07688044    0.01944026   0.010342235  0.0058737118 #> vs       0.4409477    0.09276443    0.01167477   0.001799976  0.0006848322 #> cyl      0.7261800    0.19877978    0.04304518   0.015251991  0.0050994979 #> set1     0.7343966    0.20916653    0.05695739   0.030887988  0.0175006137 #> set2     0.7809306    0.24778381    0.08623238   0.051865275  0.0336949874 #>  #> Complete Dominance Proportions: #>         > am  > vs > cyl > set1 > set2 #> am >      NA 0.625  0.25      0      0 #> vs >   0.375    NA  0.00      0      0 #> cyl >  0.750 1.000    NA      0      0 #> set1 > 1.000 1.000  1.00     NA      0 #> set2 > 1.000 1.000  1.00      1     NA #>    ## Multivariate regression with multivariate r-square and ## all subsets variable mlm_rxy <-   function(fml, data, dvnames) {     mlm_res <- lm(fml, data = data)     mlm_pred <- predict(mlm_res)     cancor(mlm_pred, data[dvnames])$cor[[1]]^2   }  domir(   cbind(wt, mpg) ~ vs + cyl + am + carb,   mlm_rxy,   .all = ~ carb,   data = mtcars,   dvnames = c(\"wt\", \"mpg\") ) #> Overall Value:      0.8384378  #> All Subset Value:   0.3137993  #>  #> General Dominance Values: #>     General Dominance Standardized Ranks #> vs         0.07169528   0.08551056     3 #> cyl        0.21206213   0.25292531     2 #> am         0.24088099   0.28729741     1 #>  #> Conditional Dominance Values: #>     Include At: 1 Include At: 2 Include At: 3 #> vs      0.1761112    0.03768107   0.001293536 #> cyl     0.4307370    0.17804791   0.027401478 #> am      0.4311156    0.20686678   0.084660605 #>  #> Complete Dominance Proportions: #>       > vs > cyl > am #> vs >    NA     0    0 #> cyl >    1    NA    0 #> am >     1     1   NA #>    ## Named sets domir(   mpg ~ am + gear + cyl + vs + qsec + drat,   lm_r2,   data = mtcars,   .set =     list(        trns = ~ am + gear,       eng = ~ cyl + vs,        misc = ~ qsec + drat     ) ) #> Overall Value:      0.7723016  #>  #> General Dominance Values: #>      General Dominance Standardized Ranks #> trns         0.1568309    0.2030695     3 #> eng          0.3559983    0.4609576     1 #> misc         0.2594724    0.3359729     2 #>  #> Conditional Dominance Values: #>      Include At: 1 Include At: 2 Include At: 3 #> trns     0.3598419    0.08105688   0.029593970 #> eng      0.7282929    0.28022429   0.059477805 #> misc     0.5921951    0.18369835   0.002523669 #>  #> Complete Dominance Proportions: #>        > trns > eng > misc #> trns >     NA     0    0.5 #> eng >     1.0    NA    1.0 #> misc >    0.5     0     NA #>    ## Linear model returning AIC lm_aic <-   function(fml, data) {     lm_res <- lm(fml, data = data)     AIC(lm_res)  }  domir(   mpg ~ am + carb + cyl,   lm_aic,   .adj = TRUE,   .rev = TRUE,   data = mtcars  ) #> Overall Value:      161.392  #> Adjustment Value:   208.7555  #>  #> General Dominance Values: #>      General Dominance Standardized Ranks #> am          -11.392847    0.2405407     2 #> carb         -8.862961    0.1871265     3 #> cyl         -27.107674    0.5723328     1 #>  #> Conditional Dominance Values: #>      Include At: 1 Include At: 2 Include At: 3 #> am      -12.271136     -13.71691     -8.190499 #> carb     -9.574847     -11.18702     -5.827017 #> cyl     -39.449099     -29.43173    -12.442191 #>  #> Complete Dominance Proportions: #>        > am > carb > cyl #> am >     NA      1     0 #> carb >    0     NA     0 #> cyl >     1      1    NA #>    ## 'systemfit' with 'formula_list' method returning AIC if (requireNamespace(\"systemfit\", quietly = TRUE)) {   domir(     formula_list(mpg ~ am + cyl + carb, qsec ~ wt + cyl + carb),     function(fml) {       res <- systemfit::systemfit(fml, data = mtcars)       AIC(res)     },     .adj = TRUE, .rev = TRUE   ) } #> Overall Value:      249.6543  #> Adjustment Value:   331.5366  #>  #> General Dominance Values: #>           General Dominance Standardized Ranks #> mpg~am           -15.325244   0.18716189     2 #> mpg~cyl          -24.528785   0.29956153     1 #> mpg~carb          -7.562994   0.09236421     5 #> qsec~wt           -7.100567   0.08671676     6 #> qsec~cyl         -14.587951   0.17815758     3 #> qsec~carb        -12.776752   0.15603803     4 #>  #> Conditional Dominance Values: #>           Include At: 1 Include At: 2 Include At: 3 Include At: 4 Include At: 5 #> mpg~am       -27.267193   -17.2155297    -13.310890    -11.614273    -10.798286 #> mpg~cyl      -34.140455   -32.7126537    -29.580119    -24.066568    -16.893677 #> mpg~carb      -3.557813    -7.6551343     -9.517313     -8.955999     -7.533045 #> qsec~wt        4.729558    -0.3628639     -4.385376     -8.017913    -12.972984 #> qsec~cyl      -5.955071   -10.0887891    -12.887191    -14.797171    -17.965001 #> qsec~carb    -10.041693   -11.3383451    -12.630015    -13.052981    -13.479836 #>           Include At: 6 #> mpg~am       -11.745296 #> mpg~cyl       -9.779235 #> mpg~carb      -8.158657 #> qsec~wt      -21.593823 #> qsec~cyl     -25.834484 #> qsec~carb    -16.117639 #>  #> Complete Dominance Proportions: #>             > mpg~am > mpg~cyl > mpg~carb > qsec~wt > qsec~cyl > qsec~carb #> mpg~am >          NA    0.1250     0.7500    0.6875     0.5000      0.5000 #> mpg~cyl >     0.8750        NA     0.9375    0.9375     0.8125      0.8125 #> mpg~carb >    0.2500    0.0625         NA    0.6875     0.3125      0.3125 #> qsec~wt >     0.3125    0.0625     0.3125        NA     0.0625      0.3750 #> qsec~cyl >    0.5000    0.1875     0.6875    0.9375         NA      0.5000 #> qsec~carb >   0.5000    0.1875     0.6875    0.6250     0.5000          NA #>"},{"path":"https://jluchman.github.io/domir/reference/fmllst2Fml.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate formula_list into Formula::Formula — fmllst2Fml","title":"Translate formula_list into Formula::Formula — fmllst2Fml","text":"Translates formula_list objects Formula::Formula","code":""},{"path":"https://jluchman.github.io/domir/reference/fmllst2Fml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate formula_list into Formula::Formula — fmllst2Fml","text":"","code":"fmllst2Fml(fmllst, drop_lhs = NULL)"},{"path":"https://jluchman.github.io/domir/reference/fmllst2Fml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate formula_list into Formula::Formula — fmllst2Fml","text":"fmllst formula_list classed object. drop_lhs integer vector. Used selection vector remove left hand side names prior generating Formula object. vector must composed integers (e.g., 1L 1). useful Formulas separate LHS LHS model part (e.g., pscl::zeroinfl) required separte LHS parts formula_list.","code":""},{"path":"https://jluchman.github.io/domir/reference/fmllst2Fml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate formula_list into Formula::Formula — fmllst2Fml","text":"Formula::Formula object.","code":""},{"path":"https://jluchman.github.io/domir/reference/formula_list.html","id":null,"dir":"Reference","previous_headings":"","what":"A list composed of formulas — formula_list","title":"A list composed of formulas — formula_list","text":"Defines list object composed formulas. purpose class object impose structure list ensure can used obtain RHS-LHS pairs able parsed domir.","code":""},{"path":"https://jluchman.github.io/domir/reference/formula_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list composed of formulas — formula_list","text":"","code":"formula_list(...)"},{"path":"https://jluchman.github.io/domir/reference/formula_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A list composed of formulas — formula_list","text":"... formulas, possibly named","code":""},{"path":"https://jluchman.github.io/domir/reference/formula_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A list composed of formulas — formula_list","text":"list class formula_list.","code":""},{"path":"https://jluchman.github.io/domir/reference/formula_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A list composed of formulas — formula_list","text":"formula_list requires element list formula formula unique different, non-NULL dependent variable/response.","code":""},{"path":"https://jluchman.github.io/domir/reference/formula_parse.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal formula parsing function — formula_parse","title":"Internal formula parsing function — formula_parse","text":"Internal formula parsing function facilitate re-construction formula using reformulate() intended called user.","code":""},{"path":"https://jluchman.github.io/domir/reference/formula_parse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal formula parsing function — formula_parse","text":"","code":"formula_parse(.obj)"},{"path":"https://jluchman.github.io/domir/reference/print.domin.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for domin — print.domin","title":"Print method for domin — print.domin","text":"Reports formatted results domin class object.","code":""},{"path":"https://jluchman.github.io/domir/reference/print.domin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for domin — print.domin","text":"","code":"# S3 method for domin print(x, ...)"},{"path":"https://jluchman.github.io/domir/reference/print.domin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for domin — print.domin","text":"x object class \"domin\". ... arguments passed methods. used currently.","code":""},{"path":"https://jluchman.github.io/domir/reference/print.domin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for domin — print.domin","text":"\"domin\" object altered column row names conditional complete dominance results displayed console.","code":""},{"path":"https://jluchman.github.io/domir/reference/print.domin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print method for domin — print.domin","text":"print method class domin objects reports following results: Fit statistic full model.  fit statistic subsets model reported entries .  fit statistic constant model reported entries consmodel. Matrix describing general dominance statistics, standardized general dominance statistics, ranking general dominance statistics conditional TRUE, matrix describing conditional dominance designations complete TRUE, matrix describing complete dominance designations following summary.domin, matrix describing strongest dominance designations independent variables entries sets /terms included set well terms subsets reported domin print method alters dimension names readability display stored original domin object.","code":""},{"path":"https://jluchman.github.io/domir/reference/print.domir.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for domir — print.domir","title":"Print method for domir — print.domir","text":"Reports formatted results domir class object.","code":""},{"path":"https://jluchman.github.io/domir/reference/print.domir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for domir — print.domir","text":"","code":"# S3 method for domir print(x, ...)"},{"path":"https://jluchman.github.io/domir/reference/print.domir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for domir — print.domir","text":"x object class \"domir\". ... arguments passed print.default.","code":""},{"path":"https://jluchman.github.io/domir/reference/print.domir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for domir — print.domir","text":"submitted \"domir\" object, invisibly.","code":""},{"path":"https://jluchman.github.io/domir/reference/print.domir.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print method for domir — print.domir","text":"print method class domir objects reports following results: Value elements included obj. Value elements included ., . Value elements included .adj, . Matrix describing general dominance values, standardized general dominance values, ranking general dominance values. Matrix describing conditional dominance values, computed Matrix describing complete dominance designations, evaluated following summary.domir, matrix describing strongest dominance designations elements. domir print method alters dimension names readability display stored domir object.","code":""},{"path":"https://jluchman.github.io/domir/reference/summary.domin.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for domin — summary.domin","title":"Summary method for domin — summary.domin","text":"Reports dominance designation results domin class object.","code":""},{"path":"https://jluchman.github.io/domir/reference/summary.domin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for domin — summary.domin","text":"","code":"# S3 method for domin summary(object, ...)"},{"path":"https://jluchman.github.io/domir/reference/summary.domin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for domin — summary.domin","text":"object object class \"domin\". ... arguments passed methods. used currently.","code":""},{"path":"https://jluchman.github.io/domir/reference/summary.domin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for domin — summary.domin","text":"originally submitted \"domin\" object additional Strongest_Dominance element added. Strongest_Dominance Matrix comparing independent variable first row independent variable third row.  second row denotes strongest designation two independent variables.","code":""},{"path":"https://jluchman.github.io/domir/reference/summary.domin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary method for domin — summary.domin","text":"summary method class domin used obtaining strongest dominance designations (.e., general, conditional, complete) among independent variables.","code":""},{"path":"https://jluchman.github.io/domir/reference/summary.domir.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for domir — summary.domir","title":"Summary method for domir — summary.domir","text":"Reports dominance designation results domir class object.","code":""},{"path":"https://jluchman.github.io/domir/reference/summary.domir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for domir — summary.domir","text":"","code":"# S3 method for domir summary(object, ...)"},{"path":"https://jluchman.github.io/domir/reference/summary.domir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for domir — summary.domir","text":"object object class \"domir\". ... arguments passed methods. used currently.","code":""},{"path":"https://jluchman.github.io/domir/reference/summary.domir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for domir — summary.domir","text":"submitted \"domir\" object additional Strongest_Dominance element added. Strongest_Dominance Matrix comparing element first row element third row.  second row denotes strongest designation two elements.","code":""},{"path":"https://jluchman.github.io/domir/reference/summary.domir.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary method for domir — summary.domir","text":"summary method class domir objects used obtaining strongest dominance designations (.e., general, conditional, complete) among pairs dominance analyzed elements.","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"domir-120","dir":"Changelog","previous_headings":"","what":"domir 1.2.0","title":"domir 1.2.0","text":"CRAN release: 2024-05-04","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"visible-1-2-0","dir":"Changelog","previous_headings":"","what":"visible","title":"domir 1.2.0","text":"Basic parallel estimation subsets using parallel::parSapply Progress bar added non-parallel sub-model estimation Update summary method offset()s now allowed formula method formula input .adj defunct Better handing errors returned ‘.fct’. Reports specific error resulted. New pkgdown-based GitHub page extra visual design features.","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"internal-1-2-0","dir":"Changelog","previous_headings":"","what":"internal","title":"domir 1.2.0","text":"formula method sync formula_list Intercept removal offsets allowed ..set","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"bug-fix-1-2-0","dir":"Changelog","previous_headings":"","what":"bug fix","title":"domir 1.2.0","text":"offsets() omitted models predictors. issue .adj’s value","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"domir-111","dir":"Changelog","previous_headings":"","what":"domir 1.1.1","title":"domir 1.1.1","text":"CRAN release: 2023-10-01","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"bug-fixes-1-1-1","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"domir 1.1.1","text":"domir() produced error .cdl = FALSE combined .lme4 added suggested list due reference documentation CRAN warning","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"domir-110","dir":"Changelog","previous_headings":"","what":"domir 1.1.0","title":"domir 1.1.0","text":"CRAN release: 2023-09-03","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"visible-1-1-0","dir":"Changelog","previous_headings":"","what":"visible","title":"domir 1.1.0","text":"merger planned list Formula::Formula methods fmllst2Fml can used translate formula_lists Formula::Formulas offset()s allowed formula_list; update formula method formulas form ~ 1 still accepted depreciated formula inputs defunct user pushed add .fct","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"internal-1-1-0","dir":"Changelog","previous_headings":"","what":"internal","title":"domir 1.1.0","text":"Began linting process code readability","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"domir-101","dir":"Changelog","previous_headings":"","what":"domir 1.0.1","title":"domir 1.0.1","text":"CRAN release: 2023-04-24","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"bug-fixes-1-0-1","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"domir 1.0.1","text":"silently removed replaced parsing. Argument checks formula method produced inconsistent results","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"domir-100","dir":"Changelog","previous_headings":"","what":"domir 1.0.0","title":"domir 1.0.0","text":"CRAN release: 2022-07-11","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"breakingmajor-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"breaking/major changes","title":"domir 1.0.0","text":"Formula list methods development .obj submits object S3 method dispatch based .fct submits function accepts result type .obj returns scalar .wst argument development (‘within-set’ Owen decomposition) longer active development; bug fixes ","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"internal-1-0-0","dir":"Changelog","previous_headings":"","what":"internal","title":"domir 1.0.0","text":"computational engines planned. Internal function may renamed.","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"domir 1.0.0","text":"summary.domin recognizing reverse = TRUE.","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"domir-032","dir":"Changelog","previous_headings":"","what":"domir 0.3.2","title":"domir 0.3.2","text":"CRAN release: 2022-05-09","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"bug-fixes-0-3-2","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"domir 0.3.2","text":"removing reference dominanceanalysis package CRAN currently given request CRAN maintainers CRAN note.","code":""},{"path":[]},{"path":"https://jluchman.github.io/domir/news/index.html","id":"visible-0-3-1","dir":"Changelog","previous_headings":"","what":"visible","title":"domir 0.3.1","text":"fixing typos editorial errors domir_basics vignette. Extending conditional dominance discussion graphic.","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"bug-fixes-0-3-1","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"domir 0.3.1","text":"fixing error email address domir-package leading CRAN check warnings.","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"domir-030","dir":"Changelog","previous_headings":"","what":"domir 0.3.0","title":"domir 0.3.0","text":"CRAN release: 2022-02-21","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"visible-0-3-0","dir":"Changelog","previous_headings":"","what":"visible","title":"domir 0.3.0","text":"conditional logical argument make computing conditional dominance statistics optional method computing strongest dominance designations independent variables update print.domin display strongest dominance designations reorganization update Conceptual Introduction Dominance Analysis vignette","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"internal-0-3-0","dir":"Changelog","previous_headings":"","what":"internal","title":"domir 0.3.0","text":"looping used construct many dominance statistics, replaced matrix-based methods; intended simplify expedite computations","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"domir 0.3.0","text":"update email domin-package requested CRAN maintainers.","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"domir-020","dir":"Changelog","previous_headings":"","what":"domir 0.2.0","title":"domir 0.2.0","text":"CRAN release: 2021-09-27","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"visible-0-2-0","dir":"Changelog","previous_headings":"","what":"visible","title":"domir 0.2.0","text":"consmodel argument adjust baseline fit statistic values reverse argument change rank complete dominance interpretation fit metrics decrease better fit Conceptual Introduction Dominance Analysis vignette added","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"internal-0-2-0","dir":"Changelog","previous_headings":"","what":"internal","title":"domir 0.2.0","text":"implemented unit testing framework - covers 82% domin internal use reformulate construct formulas opposed paste-ing +-es","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"domir 0.2.0","text":"Complete_Dominance computation producing inconsistent complete dominance designations - within-order complete dominance checks capturing possible model comparisons","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"domir-010","dir":"Changelog","previous_headings":"","what":"domir 0.1.0","title":"domir 0.1.0","text":"CRAN release: 2021-08-09","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"visible-0-1-0","dir":"Changelog","previous_headings":"","what":"visible","title":"domir 0.1.0","text":"update format Complete_Dominance integers logicals output warnings longer suppressed default - user must silence noisy functions minimum two terms/sets run domin (replicates behavior Stata version) additional checks (response formula/orders formula) Complete_Dominance matrix Conditional_Dominance matrix ## internal extensive re-write computation methods pre-allocates container objects improve performance increased functional-ization subroutines overall code readability many internal functions re-named","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"bug-fixes-0-1-0","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"domir 0.1.0","text":"returned value .$Subset_Details$Full_Model now includes variables many models considered complete dominance - inconsistent standard dominance analysis methodology Fixed error suppressing complete dominance (.e., complete = FALSE) resulted error","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"domir-001","dir":"Changelog","previous_headings":"","what":"domir 0.0.1","title":"domir 0.0.1","text":"CRAN release: 2021-03-29","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"bug-fixes-0-0-1","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"domir 0.0.1","text":"Ensemble_Coordinator submitted factor numbers instead text R versions < 4.0","code":""},{"path":"https://jluchman.github.io/domir/news/index.html","id":"domir-000","dir":"Changelog","previous_headings":"","what":"domir 0.0.0","title":"domir 0.0.0","text":"CRAN release: 2021-03-01 initial working version domin initial working version print.domin","code":""}]
